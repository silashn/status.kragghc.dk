// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Status.Data.Contexts;

namespace Status.Web.Migrations
{
    [DbContext(typeof(StatusDbContext))]
    [Migration("20190418140743_azure.aspiri.dkInitial")]
    partial class azureaspiridkInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Status.Data.Models.Disk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceID");

                    b.Property<long>("FreeSpace");

                    b.Property<string>("Name");

                    b.Property<int>("ReadingID");

                    b.Property<long>("Size");

                    b.HasKey("ID");

                    b.HasIndex("ReadingID");

                    b.ToTable("Disks");
                });

            modelBuilder.Entity("Status.Data.Models.Reading", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPU");

                    b.Property<DateTime>("Created");

                    b.Property<double>("RAM");

                    b.Property<string>("Time");

                    b.HasKey("ID");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("Status.Data.Models.Disk", b =>
                {
                    b.HasOne("Status.Data.Models.Reading", "Reading")
                        .WithMany("Disks")
                        .HasForeignKey("ReadingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
